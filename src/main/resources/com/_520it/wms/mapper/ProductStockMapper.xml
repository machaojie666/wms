<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.wms.mapper.ProductStockMapper">

    <resultMap id="BaseResultMap" type="ProductStock">
        <id property="id" column="id"/>
        <result property="price" column="price"/>
        <result property="amount" column="amount"/>
        <result property="storeNumber" column="storeNumber"/>

        <association property="product" javaType="Product">
            <id column="p_id" property="id"/>
            <result column="p_sn" property="sn"/>
            <result column="p_name" property="name"/>
            <association property="brand" javaType="Brand">
                <id column="b_id" property="id"/>
                <result column="b_name" property="name"/>
            </association>
        </association>
        <association property="depot" javaType="Depot" columnPrefix="d_">
            <id column="id" property="id"/>
            <result column="name" property="name"/>
        </association>

    </resultMap>

    <sql id="base_column">
        ps.id,ps.price,ps.storeNumber,ps.amount,
        p.id AS p_id,p.sn AS p_sn,p.name AS p_name,
        d.id AS d_id,d.name AS d_name,
        b.id AS b_id,b.name AS b_name
    </sql>
    <sql id="base_table">
        productstock ps
        JOIN product p ON ps.product_id = p.id
        JOIN depot d ON ps.depot_id = d.id
        JOIN brand b ON p.brand_id = b.id
    </sql>

    <insert id="save" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO productStock (price,amount,storeNumber,product_id,depot_id)
        VALUES (#{price},#{amount},#{storeNumber},#{product.id},#{depot.id})
    </insert>

    <update id="update">
        UPDATE productStock
        SET
        price = #{price},
        storeNumber = #{storeNumber},
        amount = #{amount}
        where id = #{id}
    </update>

    <select id="listAll">
        SELECT ps.id,ps.price,ps.storeNumber,ps.amount,
        p.id AS p_id,p.name AS p_name,
        d.id AS d_id,d.name AS d_name
        FROM productStock ps
        JOIN product p ON ps.product_id = p.id
        JOIN depot d ON ps.depot_id = d.id
    </select>

    <select id="selectByDepotIdAndProductId" resultMap="BaseResultMap">
        SELECT ps.id,ps.price,ps.storeNumber,ps.amount
        FROM productStock ps
        WHERE ps.product_id = #{productId} and ps.depot_id = #{depotId}
    </select>

    <sql id="base_where">
        <where>
            <if test="keywords!=null">
                AND (p.sn LIKE concat('%',#{keywords},'%') or p.name like concat('%',#{keywords},'%'))
            </if>
            <if test="brandId>0">
                and b.id = #{brandId}
            </if>
            <if test="depotId>0">
                and d.id = #{depotId}
            </if>
            <if test="limitNumber!=null">
                and ps.storeNumber &lt; #{limitNumber}
            </if>
        </where>
    </sql>

    <select id="getTotalCount" resultType="int">
        SELECT COUNT(ps.id)
        FROM <include refid="base_table"/>
        <include refid="base_where"/>
    </select>

    <select id="getListData" resultMap="BaseResultMap">
        SELECT <include refid="base_column"/>
        FROM <include refid="base_table"/>
        <include refid="base_where"/>
        <if test="pageSize>0">
            limit #{beginIndex},#{pageSize}
        </if>
    </select>

</mapper>